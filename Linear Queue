#include <stdio.h>
#define MAX 5
int queue[MAX];
int front = -1, rear = -1;
int isEmpty() {
    return front == -1;
}
int isFull() {
    return rear == MAX - 1;
}
void insert(int item) {
    if (isFull()) {
        printf("Queue Overflow: Queue is full. Cannot insert.\n");
    } else {
        if (isEmpty()) {
            front = 0;
        }
        rear++;
        queue[rear] = item;
        printf("Inserted: %d\n", item);
    }
}
void delete() {
    if (isEmpty()) {
        printf("Queue Underflow: Queue is empty. Cannot delete.\n");
        return  -1;
    }
        int item = queue[front];
        if (front == rear) {
            front = rear = -1;
        } else {
            front++;
        }
    printf("%d deleted from the queue\n",item);
    return item;
}
void display() {
    if (isEmpty()) {
        printf("Queue is empty\n");
    } else {
        printf("Queue elements: ");
        for (int i = front; i <= rear; i++) {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}
int main() {
    int choice, item;
    while (1) {
        printf("\nQueue Menu:\n");
        printf("1. Insert\n2. Delete\n3. Display\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("Enter the element to insert: ");
                scanf("%d", &item);
                insert(item);
                break;
            case 2:
                delete();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting the program.\n");
                return 0;
            default:
                printf("Invalid choice.\n");
        }
    }
    return 0;
}
