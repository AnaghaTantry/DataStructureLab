#include <stdio.h>
#include<stdlib.h>
#define MAX 5
struct stack {
    int arr[MAX];
    int top;
};
void initialize(struct stack *s) {
    s->top = -1;
}
void push(struct stack *s, int item) {
    if (s->top == MAX-1) {
        printf("Stack Overflow! Cannot push element %d\n", item);
    } else {
        s->top++;
        s->arr[s->top] = item;
        printf("Element %d pushed onto the stack\n", item);
    }
}
void pop(struct stack *s) {
    int item;
    if (s->top ==-1) {
        printf("Stack Underflow! Cannot pop from an empty stack\n");
    } else {
        item = s->arr[s->top];
        (s->top)--;
        printf("Element %d popped from the stack\n",item);
    }
}
void display(struct stack *s) {
    if (s->top == -1) {
        printf("Stack is empty\n");
    } else {
        printf("The stack elements are\n");
        for (int i = s->top; i >= 0; i--) {
            printf("%d ", s->arr[i]);
        }
        printf("\n");
    }
}
int main() {
    struct stack s;
    initialize(&s);
    int choice=0, element;
    while(1) {
        printf("\nMenu:\n");
        printf("1. Push Element\n");
        printf("2. Pop Element\n");
        printf("3. Display Stack Status\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("Enter element to push: ");
                scanf("%d", &element);
                push(&s, element);
                break;
            case 2:
                pop(&s);
                break;
            case 3:
                display(&s);
                break;
            case 4:
                printf("Exiting the program\n");
                exit(0);
                break;
            default:
                printf("Invalid choice\n");
        }
    }
    return 0;
}
