#include <stdio.h>
#include <stdlib.h>
#define MAX 100

int front = -1;
int rear = -1;
int arr[MAX];
int isEmpty() {
    return (front == -1);
}
int isFull() {
    return (rear == MAX - 1);
}
void enqueue(int item) {
    if (isFull()) {
        printf("Queue is full. Cannot enqueue.\n");
        return;
    }
    if (isEmpty()) {
        front = 0;
    }
    rear++;
    arr[rear] = item;
    printf("%d enqueued to the queue.\n", item);
}
int dequeue() {
    if (isEmpty()) {
        printf("Queue is empty. Cannot dequeue.\n");
        return -1;
    }
    int item = arr[front];
    if (front == rear) {
        front = -1;
        rear = -1;
    } else {
        front++;
    }
    printf("%d dequeued from the queue.\n", item);
    return item;
}
void display() {
    if (isEmpty()) {
        printf("Queue is empty.\n");
        return;
    }
    printf("Queue elements: ");
    for (int i = front; i <= rear; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int choice, item;

    while (1) {
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Display\n");
        printf("4. Quit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the element to enqueue: ");
                scanf("%d", &item);
                enqueue(item);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid choice. Please enter 1, 2, 3, or 4.\n");
        }
    }

    return 0;
}
