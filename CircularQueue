#include <stdio.h>
#define MAX 5
int queue[MAX];
int front = -1, rear = -1;

int isEmpty() {
    return (front == -1 && rear == -1);
}

int isFull() {
    return (rear + 1) % MAX == front;
}

void insert(int item)
{
    if(isFull())
    printf("\nCircular Queue is full!!\n");
    else
    {
    printf("Enter the element in to Circular Queue\n");
    scanf("%d",&item);
    if(isEmpty()){
     front = rear = 0;
    } else
     rear = (rear + 1) % MAX;
     queue[rear] = item;

}
}

void delete() {
    if (isEmpty()) {
        printf("Queue Underflow: Queue is empty. Cannot delete.\n");
    } else {
        int deletedItem = queue[front];
        if (front == rear) {
            front = rear = -1;
        } else {
            front = (front + 1) % MAX;
        }
        printf("Deleted: %d\n", deletedItem);
    }
}
void display()
{
    int i;
    if(isEmpty())
        printf("Queue is Empty\n");
    else
    {
        printf("The elements of circular queue\n");
        for( i = front; i!=rear; i=(i+1)%MAX) {
            printf("%d ",queue[i]);
        }
        printf("%d\n ",queue[i]);
    }
}

int main() {
    int choice, item;

    while (1) {
        printf("\nCircular Queue Menu:\n");
        printf("1. Insert\n2. Delete\n3. Display\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                insert(item);
                break;
            case 2:
                delete();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting the program.\n");
                return 0;
            default:
                printf("Invalid choice.\n");
        }
    }
    return 0;
}
