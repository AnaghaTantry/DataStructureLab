#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <math.h>
#include <string.h>
#define MAX 100
struct stack {
    int top;
    int arr[MAX];
};
void push(int value, struct stack *s) {
    if (s->top == MAX - 1) {
        printf("Stack Overflow\n");
        return;
    }
    s->arr[++s->top] = value;
}
int pop(struct stack *s) {
    if (s->top == -1) {
        printf("Stack Underflow\n");
        return -1;
    }
    return s->arr[s->top--];
}
double compute(double op1, double op2, char symbol) {
    switch (symbol) {
        case '+':
            return op1 + op2;
        case '-':
            return op1 - op2;
        case '*':
            return op1 * op2;
        case '/':
            if (op2 == 0) {
                printf("Division by zero error\n");
                exit(0);
            }
            return op1 / op2;
        case '%':
            return fmod(op1, op2);
        case '$':
        case '^':
            return pow(op1, op2);
        default:
            printf("Invalid operator\n");
            exit(0);
    }
}
int main() {
    struct stack s;
    s.top = -1;
    int i;
    double res;
    char postfix[MAX], symbol;
    printf("Enter postfix expression: ");
    fgets(postfix, MAX, stdin);
    for (i = 0; postfix[i] != '\0'; i++) {
        symbol = postfix[i];
        if (isdigit(symbol)) {
            push(symbol - '0', &s);
        } else if (symbol != ' ' && symbol != '\n'){
            double op2 = pop(&s);
            double op1 = pop(&s);
            res = compute(op1, op2, symbol);
            push(res, &s);
        }
    }
    printf("Result after evaluation = %f\n", res);
    return 0;
}
